apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as Integer
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as Integer
        targetSdkVersion TARGET_SDK_VERSION as Integer
        versionName VERSION_NAME
        versionCode VERSION_CODE as Integer
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "androidx.multidex:multidex:2.0.0"
    api "androidx.recyclerview:recyclerview:1.0.0"
    api "androidx.appcompat:appcompat:1.0.0"
    api "com.google.android.material:material:1.0.0"
    api "androidx.constraintlayout:constraintlayout:1.1.3"
    api "com.squareup.okhttp3:logging-interceptor:$LOGGING_INTERCEPTOR_VERSION"
    api "com.squareup.retrofit2:converter-gson:$CONVERTER_GSON_VERSION"
    api "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    api "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    api "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    api "com.github.ctiao:DanmakuFlameMaster:$DANMAKU_FLAME_MASTER_VERSION"
    api "de.hdodenhof:circleimageview:$CIRCLEIMAGEVIEW_VERSION"
    api "com.google.code.gson:gson:$GSON_VERSION"
    api "com.blankj:utilcode:$UTIL_CODE_VERSION"
    api rootProject.ext.liteavSdk
    api rootProject.ext.imSdk
    api project(':Beauty')
    api project(':Debug')
}
